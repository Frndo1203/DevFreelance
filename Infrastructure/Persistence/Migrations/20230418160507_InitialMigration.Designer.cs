// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
  [DbContext(typeof(DevFreelanceDbContext))]
  [Migration("20230418160507_InitialMigration")]
  partial class InitialMigration
  {
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("ProductVersion", "7.0.5")
          .HasAnnotation("Relational:MaxIdentifierLength", 128);

      SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

      modelBuilder.Entity("Core.Entities.Project", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

            b.Property<DateTime>("CreatedAt")
                      .HasColumnType("datetime2");

            b.Property<string>("Description")
                      .IsRequired()
                      .HasColumnType("nvarchar(max)");

            b.Property<DateTime?>("FinishedAt")
                      .HasColumnType("datetime2");

            b.Property<int>("IdClient")
                      .HasColumnType("int");

            b.Property<int>("IdFreelancer")
                      .HasColumnType("int");

            b.Property<DateTime?>("StartedAt")
                      .HasColumnType("datetime2");

            b.Property<int>("Status")
                      .HasColumnType("int");

            b.Property<string>("Title")
                      .IsRequired()
                      .HasColumnType("nvarchar(max)");

            b.Property<decimal?>("TotalCost")
                      .HasColumnType("decimal(18,2)");

            b.HasKey("Id");

            b.HasIndex("IdClient");

            b.HasIndex("IdFreelancer");

            b.ToTable("Projects");
          });

      modelBuilder.Entity("Core.Entities.ProjectComment", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

            b.Property<string>("Content")
                      .IsRequired()
                      .HasColumnType("nvarchar(max)");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnType("datetime2");

            b.Property<int>("IdProject")
                      .HasColumnType("int");

            b.Property<int>("IdUser")
                      .HasColumnType("int");

            b.Property<int>("ProjectId")
                      .HasColumnType("int");

            b.Property<int>("UserId")
                      .HasColumnType("int");

            b.HasKey("Id");

            b.HasIndex("ProjectId");

            b.HasIndex("UserId");

            b.ToTable("Comments");
          });

      modelBuilder.Entity("Core.Entities.Skill", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

            b.Property<DateTime>("CreatedAt")
                      .HasColumnType("datetime2");

            b.Property<string>("Description")
                      .IsRequired()
                      .HasColumnType("nvarchar(max)");

            b.HasKey("Id");

            b.ToTable("Skills");
          });

      modelBuilder.Entity("Core.Entities.User", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

            b.Property<bool>("Active")
                      .HasColumnType("bit");

            b.Property<DateTime>("BirthDate")
                      .HasColumnType("datetime2");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnType("datetime2");

            b.Property<string>("Email")
                      .IsRequired()
                      .HasColumnType("nvarchar(max)");

            b.Property<string>("FullName")
                      .IsRequired()
                      .HasColumnType("nvarchar(max)");

            b.HasKey("Id");

            b.ToTable("Users");
          });

      modelBuilder.Entity("Core.Entities.UserSkill", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

            b.Property<int>("IdSkill")
                      .HasColumnType("int");

            b.Property<int>("IdUser")
                      .HasColumnType("int");

            b.Property<int?>("UserId")
                      .HasColumnType("int");

            b.HasKey("Id");

            b.HasIndex("UserId");

            b.ToTable("UserSkill");
          });

      modelBuilder.Entity("Core.Entities.Project", b =>
          {
            b.HasOne("Core.Entities.User", "Client")
                      .WithMany("OwnedProjects")
                      .HasForeignKey("IdClient")
                      .OnDelete(DeleteBehavior.Restrict)
                      .IsRequired();

            b.HasOne("Core.Entities.User", "Freelancer")
                      .WithMany("FreelanceProjects")
                      .HasForeignKey("IdFreelancer")
                      .OnDelete(DeleteBehavior.Restrict)
                      .IsRequired();

            b.Navigation("Client");

            b.Navigation("Freelancer");
          });

      modelBuilder.Entity("Core.Entities.ProjectComment", b =>
          {
            b.HasOne("Core.Entities.Project", "Project")
                      .WithMany("Comments")
                      .HasForeignKey("ProjectId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.HasOne("Core.Entities.User", "User")
                      .WithMany("Comments")
                      .HasForeignKey("UserId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.Navigation("Project");

            b.Navigation("User");
          });

      modelBuilder.Entity("Core.Entities.UserSkill", b =>
          {
            b.HasOne("Core.Entities.User", null)
                      .WithMany("Skills")
                      .HasForeignKey("UserId");
          });

      modelBuilder.Entity("Core.Entities.Project", b =>
          {
            b.Navigation("Comments");
          });

      modelBuilder.Entity("Core.Entities.User", b =>
          {
            b.Navigation("Comments");

            b.Navigation("FreelanceProjects");

            b.Navigation("OwnedProjects");

            b.Navigation("Skills");
          });
#pragma warning restore 612, 618
    }
  }
}
